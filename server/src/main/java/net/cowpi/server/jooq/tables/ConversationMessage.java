/*
 * This file is generated by jOOQ.
 */
package net.cowpi.server.jooq.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import net.cowpi.server.jooq.Indexes;
import net.cowpi.server.jooq.Keys;
import net.cowpi.server.jooq.Router;
import net.cowpi.server.jooq.tables.records.ConversationMessageRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ConversationMessage extends TableImpl<ConversationMessageRecord> {

    private static final long serialVersionUID = 540670054;

    /**
     * The reference instance of <code>router.conversation_message</code>
     */
    public static final ConversationMessage CONVERSATION_MESSAGE = new ConversationMessage();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ConversationMessageRecord> getRecordType() {
        return ConversationMessageRecord.class;
    }

    /**
     * The column <code>router.conversation_message.id</code>.
     */
    public final TableField<ConversationMessageRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('router.conversation_message_id_seq'::regclass)", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>router.conversation_message.conversation_id</code>.
     */
    public final TableField<ConversationMessageRecord, Long> CONVERSATION_ID = createField("conversation_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>router.conversation_message.message_index</code>.
     */
    public final TableField<ConversationMessageRecord, Long> MESSAGE_INDEX = createField("message_index", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>router.conversation_message.message</code>.
     */
    public final TableField<ConversationMessageRecord, byte[]> MESSAGE = createField("message", org.jooq.impl.SQLDataType.BLOB.nullable(false), this, "");

    /**
     * The column <code>router.conversation_message.oes_response_count</code>.
     */
    public final TableField<ConversationMessageRecord, Integer> OES_RESPONSE_COUNT = createField("oes_response_count", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * Create a <code>router.conversation_message</code> table reference
     */
    public ConversationMessage() {
        this(DSL.name("conversation_message"), null);
    }

    /**
     * Create an aliased <code>router.conversation_message</code> table reference
     */
    public ConversationMessage(String alias) {
        this(DSL.name(alias), CONVERSATION_MESSAGE);
    }

    /**
     * Create an aliased <code>router.conversation_message</code> table reference
     */
    public ConversationMessage(Name alias) {
        this(alias, CONVERSATION_MESSAGE);
    }

    private ConversationMessage(Name alias, Table<ConversationMessageRecord> aliased) {
        this(alias, aliased, null);
    }

    private ConversationMessage(Name alias, Table<ConversationMessageRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> ConversationMessage(Table<O> child, ForeignKey<O, ConversationMessageRecord> key) {
        super(child, key, CONVERSATION_MESSAGE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Router.ROUTER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.CONVERSATION_MESSAGE_CONVERSATION_ID_MESSAGE_INDEX_KEY, Indexes.CONVERSATION_MESSAGE_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<ConversationMessageRecord, Long> getIdentity() {
        return Keys.IDENTITY_CONVERSATION_MESSAGE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ConversationMessageRecord> getPrimaryKey() {
        return Keys.CONVERSATION_MESSAGE_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ConversationMessageRecord>> getKeys() {
        return Arrays.<UniqueKey<ConversationMessageRecord>>asList(Keys.CONVERSATION_MESSAGE_PKEY, Keys.CONVERSATION_MESSAGE_CONVERSATION_ID_MESSAGE_INDEX_KEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ConversationMessage as(String alias) {
        return new ConversationMessage(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ConversationMessage as(Name alias) {
        return new ConversationMessage(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ConversationMessage rename(String name) {
        return new ConversationMessage(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public ConversationMessage rename(Name name) {
        return new ConversationMessage(name, null);
    }
}
